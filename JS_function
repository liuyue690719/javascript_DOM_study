JS DOM编程艺术主要函数
addClass：

function addClass(element,value){
	if (!element.className){
		element.className=value;
	}else{
		newClassName=element.className;
		newClassName+=" ";
		newClassName+=value;
		element.className=newClassName;
	}
}

addLoadEvent：

function addLoadEvent(func){
	var oldonload=window.onload;
	if (typeof window.onload !='function'){
		window.onload=func;
	} else{
		window.onload=function(){
			oldonload();
			func();
		}
	}
}

displayAbbreviations：

function displayAbbreviations(){
	var abbreviations=document.getElementsByTagName("abbr");
	if (abbreviations.length<1)return false;
	var defs=new Array();
	for (var i=0;i<abbreviations.length;i++){
		var defination=abbreviations[i].getAttribute("title");
		var key=abbreviations[i].lastChild.nodeValue;
		defs[key]=defination;
	}
	var dlist=document.createElement("dl");
	for (key in defs){
		var defination=defs[key];
		var dtitle=document.createElement("dt");
		var dtitle_text=document.createTextNode(key);
		dtitle.appendChild(dtitle_text);
		var ddesc=document.createElement("dd");
		var ddesc_text=document.createTextNode(defination);
		dtitle.appendChild(ddesc_text);
		dlist.appendChild(dtitle);
		dlist.appendChild(ddesc);
	}
	var header=document.createElement("h2");
	var header_text=document.createTextNode("Abbreviations");
	header.appendChild(header_text);
	document.body.appendChild(header);
	document.body.appendChild(dlist);
}
addLoadEvent(displayAbbreviations);

displayAccesskeys：

function displayAccesskeys(){
	var links=document.getElementsByTagName("a");
	var akeys=new Array();
	for (var i=0;i<links.length;i++){
		var current_link=links[i];
		if (!current_link.getAttribute("accesskey"))continue;
		var key=current_link.getAttribute("accesskey");
		var text=current_link.lastChild.nodeValue;
		akeys[key]=text;
	}
	var list=document.createElement("ul");
	for (key in akeys){
		var text=akeys[key];
		var str=key+":"+text;
		var item=document.createElement("li");
		var item_text=document.createTextNode(str);
		item.appendChild(item_text);
		list.appendChild(item);
	}
	var header=document.createElement("h3");
	var header_text=document.createTextNode("Accesskeys");
	header.appendChild(header_text);
	document.body.appendChild(header);
	document.body.appendChild(list);
}
addLoadEvent(displayAccesskeys);

displayCitations：

function displayCitations(){
	var quotes=document.getElementsByTagName("blockquote");
	for (var i=0;i<quotes.length;i++){
		if (!quotes[i].getAttribute("cite"))continue;
		var url=quotes[i].getAttribute("cite");
		var quoteChildren=quotes[i].getElementsByTagName("*");
		if (quoteChildren.length<1)continue;
		var elem=quoteChildren[quoteChildren.length-1];
		var link=document.createElement("a");
		var link_text=document.createTextNode("source");
		link.appendChild(link_text);
		link.setAttribute("href",url);
		var superscript=document.createElement("sup");
		superscript.appendChild(link);
		elem.appendChild(superscript);
		
	}
}
addLoadEvent(displayCitations);

getHTTPObject：

function getHTTPObject(){
        if(typeof XMLHttpRequest == "undefined")
        	XMLhttpRequest = function(){
            try{
                return new ActiveXObject("Msml2.XMLHTTP.6.0");
            }catch(e){}
            try{
                return new ActiveXObject("Msml2.XMLHTTP.3.0");
            }catch(e){}
            try{
                return new ActiveXObject("Msml2.XMLHTTP");
            }catch(e){}
            return false;
        }   
        return new XMLHttpRequest();
    }
    
    getNewContent：
    
    function getNewContent(url){
    var request = getHTTPObject();//创建request对象
    if(request){
        request.open("GET",url,true);//get类型、url、是否异步

        request.onreadystatechange = function(){//服务器返回响应时触发
            /*
                function要在onreadystatechange被触发时执行，而不是立即执行，所以不要加（）
                request.onreadystatechange = doSomething;
            */
            if(request.readyState == 4){//返回的类型
                /*
                    readystate == 0 :未初始化
                    readystate == 1 :正在加载
                    readystate == 2 :加载成功
                    readystate == 3 :正在交互
                    readystate == 4 :完成
                */
                 if(request.status == 200){ //判断是否一切准备就绪
                var para = document.createElement("p");
                var txt = document.createTextNode(request.responseText);
                para.appendChild(txt);
                document.getElementById("data").appendChild(para);      
                //document.getElementById("data").innerHTML = request.responseText;     
            }
           }
        };
        request.send();//发送请求GET请求
        //request.send(需要传的数据);发送请求POST请求
    }else{
        alert("Sorry,your browser dosen\'t support XMLHttpRequest !!!");
    }
}
addLoadEvent(getNewContent('example.txt'));

highlightRows：

function highlightRows(){
	if(!document.getElementsByTagName)return false;
	var rows=document.getElementsByTagName("tr");
	for (var i=0;i<rows.length;i++){
		rows[i].onmouseover=function(){
			this.style.fontWeight="bold";
		}
		rows[i].onmouseout=function(){
			this.style.fontWeight="normal";
		}
	}
}
addLoadEvent(highlightRows);

insertAfter：

function insertAfter(newElement,targetElement){
	var parent=targetElement.parentNode;
	if (parent.lastChild==targetElement){
		parent.appendChild(newElement);
	}else{
		parent.insertBefore(newElement,targetElement.nextSibling);
	}
}

moveElement：

function moveElement(elementID,final_x,final_y,interval){
	if (!document.getElementById) return false;
	if (!document.getElementById(elementID)) return false;
	var elem=document.getElementById(elementID);
	if (elem.movement){
		clearTimeout(elem.movement);
	}
	if (!elem.style.left){
		elem.style.left="0px";
	}
	if (!elem.style.top){
		elem.style.top="0px";
	}
	var xpos=parseInt(elem.style.left);
	var ypos=parseInt(elem.style.top);
	var dist=0;
	if (xpos==final_x && ypos==final_y){
		return true;
	}
	if (xpos<final_x){
		dist=Math.ceil((final_x-xpos)/10);
		xpos=xpos+dist;
	}
	if (xpos>final_x){
		dist=Math.ceil((xpos-final_x)/10);
		xpos=xpos-dist;
	}
	if (ypos<final_y){
		dist=Math.ceil((final_y-ypos)/10);
		ypos=ypos+dist;
	}
	if (ypos>final_y){
		dist=Math.ceil((ypos-final_y)/10);
		ypos=ypos-dist;
	}
	elem.style.left=xpos+"px";
	elem.style.top=ypos+"px";
	var repeat = "moveElement('"+elementID+"',"+final_x+","+final_y+","+interval+")";
	elem.movement=setTimeout(repeat,interval);
}

prepareSlideshow：

function prepareSlideshow(){
	if (!document.getElementsByTagName) return false;
	if (!document.getElementById) return false;
	if (!document.getElementById("linklist")) return false;
	var slideshow=document.createElement("div");
	slideshow.setAttribute("id","slideshow");
	var preview=document.createElement("img");
	preview.setAttribute("src","./img/html.jpg");
	preview.setAttribute("alt","building blocks of web design");
	preview.setAttribute("id","preview");
	slideshow.appendChild(preview);
	var list=document.getElementById("linklist");
	insertAfter(slideshow,list);
	var links=list.getElementsByTagName("a");
	links[0].onmouseover=function(){
		moveElement("preview",-100,0,10);
	}
	links[1].onmouseover=function(){
		moveElement("preview",-200,0,10);
	}
	links[2].onmouseover=function(){
		moveElement("preview",-300,0,10);
	}
}
addLoadEvent(prepareSlideshow);


showPic：

function addLoadEvent(func){
	var oldonload=window.onload;
	if (typeof window.onload !='function'){
		window.onload=func;
	} else{
		window.onload=function(){
			oldonload();
			func();
		}
	}
}

function insertAfter(newElement,targetElement){
	var parent=targetElement.parentNode;
	if (parent.lastChild ==targetElement){
		parent.appendChild(newElement);
	} else {
		parent.insertBefore(newElement,targetElement.nextSibling);
	}
}

function preparePlaceholder(){
	if (!document.createElement) return false;
	if (!document.createTextNode) return false;
	if (!document.getElementById("imagegallery")) return false;
	if (!document.getElementById) return false;
	var placeholder = document.createElement("img");
	placeholder.setAttribute("id","placeholder");
	placeholder.setAttribute("src","img/back.jpg");
	placeholder.setAttribute("alt","my image gallery");
	var description=document.createElement("p");
	description.setAttribute("id","description");
	var desctext=document.createTextNode("Choose an image");
	description.appendChild(desctext);
	var gallery=document.getElementById("imagegallery");
	insertAfter(placeholder,gallery);
	insertAfter(description,placeholder);
}

function prepareGallery(){
	if (!document.getElementsByTagName) return false;
	if (!document.getElementById) return false;
	if (!document.getElementById("imagegallery")) return false;
	var gallery=document.getElementById("imagegallery");
	var links=gallery.getElementsByTagName("a");
	for (var i=0;i<links.length;i++){
		links[i].onclick=function(){
			return showPic(this);
		}
		links[i].onkeypress=links[i].onclick;
	}
}


function showPic(whichpic){
	if (!document.getElementById("placeholder")) return false;
	var source=whichpic.getAttribute("href");
	var placeholder=document.getElementById("placeholder");
	placeholder.setAttribute("src",source);
	if (!document.getElementById("description")) return false;
	if (whichpic.getAttribute("title")){
		var text=whichpic.getAttribute("title");
	} else{
		var text="";
	}
	var description=document.getElementById("description");
	if (description.firstChild.nodeType==3){
		description.firstChild.nodeValue=text;
	}
	return false
}

addLoadEvent(preparePlaceholder);
addLoadEvent(prepareGallery);


stripeTables：

function stripeTables(){
	if (!document.getElementsByTagName) return false;
	var tables=document.getElementsByTagName("table");
	for (var i=0;i<tables.length;i++){
		var odd=false;
		var rows=tables[i].getElementsByTagName("tr");
		for (var j=0;j<rows.length;j++){
			if (odd==true){
				addClass(rows[j],"odd");
				odd=false;
			}else{
				odd=true;
			}
		}
	}
}
addLoadEvent(stripeTables);

styleHeaderSiblings：

function styleHeaderSiblings(){
	if (!document.getElementsByTagName) return false;
	var headers=document.getElementsByTagName("h1");
	var elem;
	for (var i=0;i<headers.length;i++){
		elem=getNextElement(headers[i].nextSibling);
		elem.style.fontWeight="bold";
		elem.style.fontSize="1.2em";
	}
}

function getNextElement(node){
	if(node.nodeType==1){
		return node;
	}
	if(node.nextSibling){
		return getNextElement(node.nextSibling);
	}
	return null;
}
addLoadEvent(styleHeaderSiblings);


focusTables：

function focusLabels(){
	if (!document.getElementsByTagName) return false;
	var labels=document.getElementsByTagName("label");
	for (var i=0;i<labels.length;i++){
		if (!labels[i].getAttribute("for"))continue;
		labels[i].onclick=function(){
			var id=this.getAttribute("for");
			if (!document.getElementById(id))return false;
			var element=document.getElementById(id);
			element.focus();
		}
	}
}
addLoadEvent(focusLabels);

resetFields：

function resetFields(form){
	if (Modernizr.input.placeholder)return;
	for (var i=0;i<whichform.elements.length;i++){
		var check=element.placeholder||element.getAttribute('placeholder');
		if (!check)continue;
		element.onfocus=function(){
			var text=this.placeholder||this.getAttribute('placeholder');
			if (this.value==text){
				this.className='';
				this.value="";
			}
		}
	
	element.onblur=function(){
		if (this.value==""){
			this.className='placeholder';
			this.value=this.placeholder||this.getAttribute('placeholder');
		}
	}
	element.onblur();
	}
}

isFilled：

function isFilled(field){
	if (field.value.replace(' ','').length==0)return false;//还有这！！
	var placeholder=field.placeholder||field.getAttribute('placeholder');
	return (field.value!=placeholder);
}

isEmail：

function isEmail(field){
	return (field.value.indexOf("@")!=-1&&field.value.indexOf(".")!=-1);//还有这里！
}

validateForm：

function validateForm(whichform){
	for (var i=0;i<whichform.elements.length;i++){
		var element=whichform.elements[i];
		if (element.required=='required'){
			if (!isFilled(element)){
				alert("Please fill the "+element.name+"field.");
				return false;
			}
		}
		if (element.type=='email'){
			if (!isEmail(element)){
				alert("The "+element.name+" field must be a valid email address.");
				return false;
			}
		}
	}
	return true;//怎么错在这里了！
}

displayAjaxLoading：

function displayAjaxLoading(element){
	while(element.hasChildNodes()){
		element.removeChild(element.lastChild);
	}
	var content=document.createElement("img");
	content.setAttribute("src","../images/loading1.gif");
	content.setAttribute("alt","loading...");
	element.appendChild(content);
}

submitFormWithAjax：

function submitFormWithAjax(whichform,thetarget){
	var request=getHTTPObject();
	if (!request){return false;}
	displayAjaxLoading(thetarget);
	var dataParts=[];
	var element;
	for (var i=0;i<whichform.elements.length;i++){
		element=whichform.elements[i];
		dataParts[i]=element.name+'='+encodeURIComponent(element.value);
	}
	var data =dataParts.join('&');
	request.open('POST',whichform.getAttribute("action"),true);
	request.setRequestHeader("Content-type","application/x-www-form-urlencoded");
	request.onreadystatechange=function(){
		if (request.readyState==4){
		if (request.status==200||request.status==0){
			var matches=request.responseText.match(/<article>([\s\S]+)<\/article>/);
			if (matches.length>0){
				thetarget.innerHTML=matches[1];
			}else{
				thetarget.innerHTML='<p>0ops,there was an error.Sorry.</p>';
			}
		}else{
			thetarget.innerHTML='<p>'+request.statusText+'</p>';
		}
	}
	};
	request.send(data);
	return true;
};

prepareForms：

function prepareForms(){
	for (var i=0;i<document.forms.length;i++){
		var thisform=document.forms[i];
		resetFields(thisform);
		thisform.onsubmit=function(){
			if (!validateForm(this))return false;
			var article=document.getElementsByTagName('article')[0];
			if (submitFormWithAjax(this,article)) return false;
			return true;
		}
	}
}
addLoadEvent(prepareForms);
